<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="teleop__avoid_8py" kind="file" language="Python">
    <compoundname>teleop_avoid.py</compoundname>
    <innerclass refid="classteleop__avoid_1_1bcolors" prot="public">teleop_avoid::bcolors</innerclass>
    <innerclass refid="classteleop__avoid_1_1_publish_thread" prot="public">teleop_avoid::PublishThread</innerclass>
    <innernamespace refid="namespaceteleop__avoid">teleop_avoid</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceteleop__avoid" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">..<sp/>module::<sp/>teleop_avoid</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:platform:<sp/>Unix</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:synopsis:<sp/>Python<sp/>module<sp/>for<sp/>controlling<sp/>the<sp/>robot<sp/>using<sp/>the<sp/>keyboard<sp/>assisted<sp/>by<sp/>an<sp/>obstacle<sp/>avoidance<sp/>algorithm</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">..<sp/>moduleauthor::<sp/>Francesco<sp/>Pagano<sp/>&lt;francescopagano1999@outlook.it&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">This<sp/>node<sp/>implements<sp/>the<sp/>third<sp/>modality<sp/>for<sp/>controlling<sp/>the<sp/>robot.<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>IMPORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sensor_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LaserScan</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>roslib;<sp/>roslib.load_manifest(</highlight><highlight class="stringliteral">&apos;teleop_twist_keyboard&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>geometry_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Twist</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacestd__srvs_1_1srv" kindref="compound">std_srvs.srv</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys,<sp/>select,<sp/>termios,<sp/>tty</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/>COLORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classteleop__avoid_1_1bcolors" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classteleop__avoid_1_1bcolors" kindref="compound">bcolors</ref>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>used<sp/>for<sp/>printing<sp/>colors</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>HEADER<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[95m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>OKBLUE<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[94m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>OKCYAN<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[96m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>OKGREEN<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[92m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>WARNING<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[93m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>FAIL<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[91m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ENDC<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[0m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>BOLD<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[1m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>UNDERLINE<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[4m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ORANGE<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[33m&apos;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>PURPLE<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\033[35m&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Instructions<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.BOLD<sp/>+</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">Reading<sp/>from<sp/>the<sp/>keyboard<sp/>and<sp/>Publishing<sp/>to<sp/>Twist!</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">---------------------------</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>+<sp/>bcolors.OKBLUE<sp/>+<sp/>bcolors.BOLD<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">[i]<sp/>go<sp/>straight<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral">[j]<sp/>turn<sp/>left</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral">[l]<sp/>turn<sp/>right</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral">[k]<sp/>go<sp/>backwards</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.HEADER<sp/>+<sp/>bcolors.BOLD<sp/>+</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral">[q]/[z]<sp/>:<sp/>increase/decrease<sp/>max<sp/>speeds<sp/>by<sp/>10%</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral">[w]/[x]<sp/>:<sp/>increase/decrease<sp/>only<sp/>linear<sp/>speed<sp/>by<sp/>10%</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral">[e]/[c]<sp/>:<sp/>increase/decrease<sp/>only<sp/>angular<sp/>speed<sp/>by<sp/>10%</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Bool<sp/>variables<sp/>for<sp/>taking<sp/>into<sp/>account<sp/>where<sp/>obstacles<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral">When<sp/>there&apos;s<sp/>no<sp/>wall<sp/>on<sp/>the<sp/>left<sp/>of<sp/>the<sp/>robot<sp/>this<sp/>variable<sp/>is<sp/>True,<sp/>otherwise<sp/>is<sp/>False</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">ok_left<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral">#<sp/>When<sp/>there&apos;s<sp/>no<sp/>wall<sp/>on<sp/>the<sp/>right<sp/>of<sp/>the<sp/>robot<sp/>this<sp/>variable<sp/>is<sp/>True,<sp/>otherwise<sp/>is<sp/>False</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">ok_right<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral">When<sp/>there&apos;s<sp/>no<sp/>wall<sp/>in<sp/>front<sp/>of<sp/>the<sp/>robot<sp/>this<sp/>variable<sp/>is<sp/>True,<sp/>otherwise<sp/>is<sp/>False</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal">ok_straight<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Dictionary<sp/>for<sp/>movement<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">moveBindings<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">:(1,0,0,0),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;j&apos;</highlight><highlight class="normal">:(0,0,0,1),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">:(0,0,0,-1),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;k&apos;</highlight><highlight class="normal">:(-1,0,0,0),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Dictionary<sp/>for<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">speedBindings={</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;q&apos;</highlight><highlight class="normal">:(1.1,1.1),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">:(.9,.9),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">:(1.1,1),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:(.9,1),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;e&apos;</highlight><highlight class="normal">:(1,1.1),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">:(1,.9),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classteleop__avoid_1_1_publish_thread" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classteleop__avoid_1_1_publish_thread" kindref="compound">PublishThread</ref>(threading.Thread):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>class<sp/>publish<sp/>thread</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>rate):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(PublishThread,<sp/>self).__init__()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1adce9f8330ad073614ca5306635a27447" kindref="member">publisher</ref><sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&apos;cmd_vel&apos;</highlight><highlight class="normal">,<sp/>Twist,<sp/>queue_size<sp/>=<sp/>1)<sp/></highlight><highlight class="comment">#Publisher<sp/>on<sp/>the<sp/>&apos;cmd_vel&apos;<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a96ae4b40448a4aea9b7a9deff2af2d11" kindref="member">x</ref><sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae8a9c3c106e29bcbe6ff28fc780aee60" kindref="member">y</ref><sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a99006d95a88abc0dd3fb6531994c8299" kindref="member">z</ref><sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1aa7427ad22036faa34cb14d925bdbb98b" kindref="member">th</ref><sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae3c0c36419cd312f146b9878d8ffe6c0" kindref="member">speed</ref><sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1afd4d7551e6eb576ceed1dc41a9ca2e1c" kindref="member">turn</ref><sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a67f561fdab8535c8d9c3e86d10a98424" kindref="member">condition</ref><sp/>=<sp/>threading.Condition()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1aa14e6318b0317203e2cffad681307a13" kindref="member">done</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>timeout<sp/>to<sp/>None<sp/>if<sp/>rate<sp/>is<sp/>0<sp/>(causes<sp/>new_message<sp/>to<sp/>wait<sp/>forever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>new<sp/>data<sp/>to<sp/>publish)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rate<sp/>!=<sp/>0.0:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1af59e49ad834b3c4aba4883983c85e3ac" kindref="member">timeout</ref><sp/>=<sp/>1.0<sp/>/<sp/>rate</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1af59e49ad834b3c4aba4883983c85e3ac" kindref="member">timeout</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.start()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">wait_for_subscribers(self):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown()<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1adce9f8330ad073614ca5306635a27447" kindref="member">publisher</ref>.get_num_connections()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>4:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>subscriber<sp/>to<sp/>connect<sp/>to<sp/>{}&quot;</highlight><highlight class="normal">.format(self.<ref refid="classteleop__avoid_1_1_publish_thread_1adce9f8330ad073614ca5306635a27447" kindref="member">publisher</ref>.name))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(0.5)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i<sp/>%<sp/>5</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rospy.is_shutdown():</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Got<sp/>shutdown<sp/>request<sp/>before<sp/>subscribers<sp/>connected&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">update(self,<sp/>x,<sp/>y,<sp/>z,<sp/>th,<sp/>speed,<sp/>turn):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a67f561fdab8535c8d9c3e86d10a98424" kindref="member">condition</ref>.acquire()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a96ae4b40448a4aea9b7a9deff2af2d11" kindref="member">x</ref><sp/>=<sp/>x</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae8a9c3c106e29bcbe6ff28fc780aee60" kindref="member">y</ref><sp/>=<sp/>y</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a99006d95a88abc0dd3fb6531994c8299" kindref="member">z</ref><sp/>=<sp/>z</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1aa7427ad22036faa34cb14d925bdbb98b" kindref="member">th</ref><sp/>=<sp/>th</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae3c0c36419cd312f146b9878d8ffe6c0" kindref="member">speed</ref><sp/>=<sp/>speed</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1afd4d7551e6eb576ceed1dc41a9ca2e1c" kindref="member">turn</ref><sp/>=<sp/>turn</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Notify<sp/>publish<sp/>thread<sp/>that<sp/>we<sp/>have<sp/>a<sp/>new<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a67f561fdab8535c8d9c3e86d10a98424" kindref="member">condition</ref>.notify()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a67f561fdab8535c8d9c3e86d10a98424" kindref="member">condition</ref>.release()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">stop(self):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1aa14e6318b0317203e2cffad681307a13" kindref="member">done</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a55fb1ed47bca2fb8b060319bfa8e89e8" kindref="member">update</ref>(0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.join()</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">my_stop(self):</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Class<sp/>funtion<sp/>for<sp/>stopping<sp/>the<sp/>robot<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist<sp/>=<sp/>Twist()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1adce9f8330ad073614ca5306635a27447" kindref="member">publisher</ref>.publish(twist)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">run(self):</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist<sp/>=<sp/>Twist()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1aa14e6318b0317203e2cffad681307a13" kindref="member">done</ref>:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a67f561fdab8535c8d9c3e86d10a98424" kindref="member">condition</ref>.acquire()</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>for<sp/>a<sp/>new<sp/>message<sp/>or<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a67f561fdab8535c8d9c3e86d10a98424" kindref="member">condition</ref>.wait(self.<ref refid="classteleop__avoid_1_1_publish_thread_1af59e49ad834b3c4aba4883983c85e3ac" kindref="member">timeout</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Copy<sp/>state<sp/>into<sp/>twist<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.x<sp/>=<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a96ae4b40448a4aea9b7a9deff2af2d11" kindref="member">x</ref><sp/>*<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae3c0c36419cd312f146b9878d8ffe6c0" kindref="member">speed</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.y<sp/>=<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae8a9c3c106e29bcbe6ff28fc780aee60" kindref="member">y</ref><sp/>*<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae3c0c36419cd312f146b9878d8ffe6c0" kindref="member">speed</ref></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.z<sp/>=<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a99006d95a88abc0dd3fb6531994c8299" kindref="member">z</ref><sp/>*<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1ae3c0c36419cd312f146b9878d8ffe6c0" kindref="member">speed</ref></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.z<sp/>=<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1aa7427ad22036faa34cb14d925bdbb98b" kindref="member">th</ref><sp/>*<sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1afd4d7551e6eb576ceed1dc41a9ca2e1c" kindref="member">turn</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1a67f561fdab8535c8d9c3e86d10a98424" kindref="member">condition</ref>.release()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1adce9f8330ad073614ca5306635a27447" kindref="member">publisher</ref>.publish(twist)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>stop<sp/>message<sp/>when<sp/>thread<sp/>exits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.linear.z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist.angular.z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classteleop__avoid_1_1_publish_thread_1adce9f8330ad073614ca5306635a27447" kindref="member">publisher</ref>.publish(twist)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getKey(key_timeout):<sp/></highlight><highlight class="comment">#<sp/>Get<sp/>input<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>tty.setraw(sys.stdin.fileno())</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>rlist,<sp/>_,<sp/>_<sp/>=<sp/>select.select([sys.stdin],<sp/>[],<sp/>[],<sp/>key_timeout)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rlist:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>termios.tcsetattr(sys.stdin,<sp/>termios.TCSADRAIN,<sp/>settings_new)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>sys.stdin.read(1)<sp/></highlight><highlight class="comment">#<sp/>Get<sp/>input<sp/>key<sp/>from<sp/>standard<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>termios.tcsetattr(sys.stdin,<sp/>termios.TCSADRAIN,<sp/>settings_old)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">clbk_laser(msg):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Callback<sp/>for<sp/>detecting<sp/>obstacles<sp/>from<sp/>laser<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ok_left</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ok_right</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ok_straight</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/>min(min(msg.ranges[0:143]),<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Detects<sp/>obstacles<sp/>on<sp/>the<sp/>right<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>front<sp/>=<sp/>min(min(msg.ranges[288:431]),<sp/>1)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Detects<sp/>obstacles<sp/>in<sp/>front<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>min(min(msg.ranges[576:719]),<sp/>1)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Detects<sp/>obstacles<sp/>on<sp/>the<sp/>left<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>right<sp/>!=<sp/>1.0:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>obstacles<sp/>detected<sp/>on<sp/>the<sp/>right<sp/>at<sp/>a<sp/>distance<sp/>less<sp/>than<sp/>1<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_right<sp/>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obstacle<sp/>detected<sp/>on<sp/>the<sp/>right<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_right<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>front<sp/>!=<sp/>1.0:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>obstacles<sp/>detected<sp/>in<sp/>the<sp/>front<sp/>direction<sp/>at<sp/>a<sp/>distance<sp/>less<sp/>than<sp/>1<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_straight<sp/>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obstacle<sp/>detected<sp/>in<sp/>front<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_straight<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>left<sp/>!=<sp/>1.0:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>No<sp/>obstacles<sp/>detected<sp/>on<sp/>the<sp/>left<sp/>at<sp/>a<sp/>distance<sp/>less<sp/>than<sp/>1<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_left<sp/>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Obstacle<sp/>detected<sp/>on<sp/>the<sp/>left<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok_left<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">pop_dict(dictionary):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Function<sp/>that<sp/>removes<sp/>commands<sp/>from<sp/>the<sp/>dictionary<sp/>when<sp/>an<sp/>obstacle<sp/>is<sp/>detected.<sp/>In<sp/>this<sp/>way,<sp/>when<sp/>an<sp/>obstacle<sp/>is<sp/>detected,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>movement<sp/>in<sp/>that<sp/>direction<sp/>is<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ok_left</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ok_right</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>ok_straight</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>the<sp/>cases<sp/>the<sp/>robot<sp/>could<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_straight<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_right<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_left:<sp/></highlight><highlight class="comment">#<sp/>Obstacles<sp/>in<sp/>every<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>all<sp/>the<sp/>three<sp/>commands<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped1<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>front<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped2<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;j&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>left<sp/>turn<sp/>movement<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped3<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>right<sp/>turn<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;i&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;j&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;l&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_left<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_straight<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ok_right:<sp/></highlight><highlight class="comment">#<sp/>Obstacles<sp/>on<sp/>the<sp/>left<sp/>and<sp/>in<sp/>the<sp/>front<sp/>direction,<sp/>so<sp/>right<sp/>direction<sp/>is<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped1<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>front<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped2<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;j&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>left<sp/>turn<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;i&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;j&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>ok_left<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_straight<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_right:<sp/></highlight><highlight class="comment">#<sp/>Obstacles<sp/>on<sp/>the<sp/>right<sp/>and<sp/>in<sp/>the<sp/>front<sp/>direction,<sp/>so<sp/>left<sp/>direction<sp/>is<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped1<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>front<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped2<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>right<sp/>turn<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;i&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;l&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_left<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ok_straight<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_right:<sp/></highlight><highlight class="comment">#<sp/>Obstacles<sp/>on<sp/>the<sp/>right<sp/>and<sp/>on<sp/>the<sp/>left,<sp/>so<sp/>the<sp/>front<sp/>direction<sp/>is<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped1<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>right<sp/>turn<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped2<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;j&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>left<sp/>turn<sp/>movement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;l&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;j&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>ok_left<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_straight<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ok_right:<sp/></highlight><highlight class="comment">#<sp/>Obstacles<sp/>only<sp/>in<sp/>the<sp/>front<sp/>direction,<sp/>so<sp/>the<sp/>left<sp/>and<sp/>right<sp/>directions<sp/>are<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped1<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>front<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;i&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_left<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ok_straight<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ok_right:<sp/></highlight><highlight class="comment">#<sp/>Obstacles<sp/>only<sp/>in<sp/>the<sp/>left<sp/>direction,<sp/>so<sp/>the<sp/>front<sp/>and<sp/>right<sp/>directions<sp/>are<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped1<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;j&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>left<sp/>turn<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;j&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>ok_left<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ok_straight<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok_right:<sp/></highlight><highlight class="comment">#<sp/>Obstacles<sp/>only<sp/>in<sp/>the<sp/>right<sp/>direction,<sp/>so<sp/>the<sp/>front<sp/>and<sp/>left<sp/>directions<sp/>are<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popped1<sp/>=<sp/>dictionary.pop(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>right<sp/>turn<sp/>movement<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.FAIL<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>&apos;l&apos;<sp/>disabled&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC<sp/>,<sp/>end=</highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">vels(speed,<sp/>turn):</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;currently:\tspeed<sp/>%s\tturn<sp/>%s<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(speed,turn)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__==</highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Settings<sp/>for<sp/>avoid<sp/>printing<sp/>commands<sp/>on<sp/>terminal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>settings_old<sp/>=<sp/>termios.tcgetattr(sys.stdin)<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>settings_new<sp/>=<sp/>settings_old</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>settings_new[3]<sp/>=<sp/>settings_new[3]<sp/>&amp;<sp/>~termios.ECHO</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Init<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&apos;teleop_avoid&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>active_=rospy.get_param(</highlight><highlight class="stringliteral">&quot;/active&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>We<sp/>want<sp/>a<sp/>local<sp/>variable<sp/>that<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>ROS<sp/>parameter<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>1<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&quot;~speed&quot;</highlight><highlight class="normal">,<sp/>0.5)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>turn<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&quot;~turn&quot;</highlight><highlight class="normal">,<sp/>1.0)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>repeat<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&quot;~repeat_rate&quot;</highlight><highlight class="normal">,<sp/>0.0)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>key_timeout<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&quot;~key_timeout&quot;</highlight><highlight class="normal">,<sp/>0.1)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/>rospy.Subscriber(</highlight><highlight class="stringliteral">&apos;/scan&apos;</highlight><highlight class="normal">,<sp/>LaserScan,<sp/>clbk_laser)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key_timeout<sp/>==<sp/>0.0:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_timeout<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_thread<sp/>=<sp/><ref refid="classteleop__avoid_1_1_publish_thread" kindref="compound">PublishThread</ref>(repeat)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>th<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>rospy.Rate(5)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_thread.wait_for_subscribers()</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_thread.update(x,<sp/>y,<sp/>z,<sp/>th,<sp/>speed,<sp/>turn)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>moveBindings_temp<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>print(msg)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>print(vels(speed,turn))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>while(1):</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active_=rospy.get_param(</highlight><highlight class="stringliteral">&quot;/active&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveBindings_temp<sp/>=<sp/>moveBindings.copy()</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>active_<sp/>==<sp/>3:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>getKey(key_timeout)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_dict(moveBindings_temp)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>moveBindings_temp.keys():</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>moveBindings_temp[key][0]<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>moveBindings_temp[key][1]</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>moveBindings_temp[key][2]</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>moveBindings_temp[key][3]</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>speedBindings.keys():</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>speed<sp/>*<sp/>speedBindings[key][0]</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>=<sp/>turn<sp/>*<sp/>speedBindings[key][1]</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(vels(speed,turn))</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>14):</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(msg)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(status<sp/>+<sp/>1)<sp/>%<sp/>15</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Skip<sp/>updating<sp/>cmd_vel<sp/>if<sp/>key<sp/>timeout<sp/>and<sp/>robot<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>x<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>y<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>z<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>th<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;\x03&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pub_thread.update(x,<sp/>y,<sp/>z,<sp/>th,<sp/>speed,<sp/>turn)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pub_thread.my_stop()<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(bcolors.OKGREEN<sp/>+<sp/>bcolors.BOLD<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Modality<sp/>3<sp/>is<sp/>currently<sp/>in<sp/>idle<sp/>state\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>bcolors.ENDC)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate.sleep()</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="scripts/teleop_avoid.py"/>
  </compounddef>
</doxygen>
